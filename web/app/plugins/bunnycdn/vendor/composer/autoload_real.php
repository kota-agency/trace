<?php

namespace {
    // autoload_real.php @generated by Composer
    class ComposerAutoloaderInit2268ef9db027c3a50bf3217b9528cbcb
    {
        private static $loader;
        public static function loadClassLoader($class)
        {
            if ('Bunny_WP_Plugin\Composer\Autoload\ClassLoader' === $class) {
                require __DIR__ . '/ClassLoader.php';
            }
        }
        /**
         * @return \Bunny_WP_Plugin\Composer\Autoload\ClassLoader
         */
        public static function getLoader()
        {
            if (null !== self::$loader) {
                return self::$loader;
            }
            require __DIR__ . '/platform_check.php';
            \spl_autoload_register(array('ComposerAutoloaderInit2268ef9db027c3a50bf3217b9528cbcb', 'loadClassLoader'), \true, \true);
            self::$loader = $loader = new \Bunny_WP_Plugin\Composer\Autoload\ClassLoader(\dirname(__DIR__));
            \spl_autoload_unregister(array('ComposerAutoloaderInit2268ef9db027c3a50bf3217b9528cbcb', 'loadClassLoader'));
            require __DIR__ . '/autoload_static.php';
            \call_user_func(\Bunny_WP_Plugin\Composer\Autoload\ComposerStaticInit2268ef9db027c3a50bf3217b9528cbcb::getInitializer($loader));
            $loader->setClassMapAuthoritative(\true);
            $loader->register(\true);
            $filesToLoad = \Bunny_WP_Plugin\Composer\Autoload\ComposerStaticInit2268ef9db027c3a50bf3217b9528cbcb::$files;
            $requireFile = \Closure::bind(static function ($fileIdentifier, $file) {
                if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
                    $GLOBALS['__composer_autoload_files'][$fileIdentifier] = \true;
                    require $file;
                }
            }, null, null);
            foreach ($filesToLoad as $fileIdentifier => $file) {
                $requireFile($fileIdentifier, $file);
            }
            return $loader;
        }
    }
}
